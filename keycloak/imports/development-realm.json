{
  "id": "development",
  "realm": "development",
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": true,
  "rememberMe": true,
  "editUsernameAllowed": true,
  "bruteForceProtected": true,
  "users" : [
    {
        "username" : "user",
        "enabled": true,
        "email" : "sample-user@example",
        "firstName": "Sample",
        "lastName": "User",
        "credentials" : [
            { "type" : "password",
              "value" : "password" }
        ],
        "realmRoles": [ "user" ],
        "clientRoles": {
            "account": ["view-profile", "manage-account"]
        }
    }
],
"roles" : {
    "realm" : [
        {
            "name": "user",
            "description": "User privileges"
        },
        {
            "name": "admin",
            "description": "Administrator privileges"
        }
    ]
},
  "clients": [
    
    {
      "clientId": "https://wordpress.docker.local/wp-content/plugins/miniorange-saml-20-single-sign-on/",
      "name": "blog",
      "description": "Wordpress demo blog",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "https://wordpress.docker.local/*"
      ],
      "webOrigins": [
        "https://wordpress.docker.local"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "saml",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "saml_assertion_consumer_url_post": "https://wordpress.docker.local/",
        "saml.server.signature": "true",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml.signing.certificate": "MIIDNzCCAh8CBgF1mPgA/DANBgkqhkiG9w0BAQsFADBfMV0wWwYDVQQDDFRodHRwczovL3dvcmRwcmVzcy5kb2NrZXIubG9jYWwvd3AtY29udGVudC9wbHVnaW5zL21pbmlvcmFuZ2Utc2FtbC0yMC1zaW5nbGUtc2lnbi1vbi8wHhcNMjAxMTA1MTUxMTMxWhcNMzAxMTA1MTUxMzExWjBfMV0wWwYDVQQDDFRodHRwczovL3dvcmRwcmVzcy5kb2NrZXIubG9jYWwvd3AtY29udGVudC9wbHVnaW5zL21pbmlvcmFuZ2Utc2FtbC0yMC1zaW5nbGUtc2lnbi1vbi8wggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDqIV9mKffxUqSlCu3P1T94EFt+KXFEPUskZB4tEUIiZc3m98pOH1VDQ4ydk2uqea8FV8Vm4lZ8F++CgvwD6Tzw6lrCy863vfMCm502GhzMEHxfddKWR2bIO0r90DhLFvRWcPb5hRRUFAvHx7Bb2U2bXIQMV/BDKbU73/7FwA4l76AMqaO+p7yF6D7Svxt58sOUP46hvi6nG4S65QgNBZr0wjCTi8lP7ZBMCBIi4YbU7aTwoX4uZmaq689Yb1ACFQDHWX1w65jfPTPIJuCD6Epb+UHowdEqEezk3OUd8543iMMiXgEMkPlhqm+qz2nah14luhR6VK3BapZh0weO62ZDAgMBAAEwDQYJKoZIhvcNAQELBQADggEBADZDEFbLEm2TgqP260lUBX5GuuHFkTEu0GhaQYlj2wgskGwUdUh1V+gvfpSci45ZRwwYjHYHrBPz5Wmfn3LTAP/bUH195RXBp9BdShLuJ8U+g1I8doM9DE0vQ28NiNWseQ/Ahj4VRPaa1E5QInRQeLaU+0DD/OuYgdUSjD/XbwwJwOZ030TMPflXaDCqEyszvk3AQNE7tkuECBVkhTwvif0J1jF7cmh8SF/BVcWx1+27iWdKQGsNR34CEbgvtx8h7wbCv2654RcnBUKOEJTsMPb0WPgX832I8vpqUdLkJqAmEgHFF0APUkUNW6qIk8SGehvLi3dAKgqd8nAF2K/hbso=",
        "saml.signature.algorithm": "RSA_SHA256",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "true",
        "display.on.consent.screen": "false",
        "saml.signing.private.key": "MIIEowIBAAKCAQEA6iFfZin38VKkpQrtz9U/eBBbfilxRD1LJGQeLRFCImXN5vfKTh9VQ0OMnZNrqnmvBVfFZuJWfBfvgoL8A+k88OpawsvOt73zApudNhoczBB8X3XSlkdmyDtK/dA4Sxb0VnD2+YUUVBQLx8ewW9lNm1yEDFfwQym1O9/+xcAOJe+gDKmjvqe8heg+0r8befLDlD+Oob4upxuEuuUIDQWa9MIwk4vJT+2QTAgSIuGG1O2k8KF+LmZmquvPWG9QAhUAx1l9cOuY3z0zyCbgg+hKW/lB6MHRKhHs5NzlHfOeN4jDIl4BDJD5Yapvqs9p2odeJboUelStwWqWYdMHjutmQwIDAQABAoIBAEvIg5WRDhVJt8tIL1OvZbzaJpM+nNAGuvTLh0z1Ih/6LdyN5ijFUZbVHYW/uwDSJEmpcFbt+ipuoPLwrNwjObuNT9VvnLiyvh7g+dESQLH4wBkyDPjhoa48Kvje1enQQ0RbikWXws24M1v2EeqY+trH5mIMcNN8g5Ie3dtqX+n8+KaKwxAvZINq8ybTsp+37dBx9HmgHxvh3qP5IJXWP52mSlbc8/6p+vIJi6VvAVruCCyWgyxdRsRirnEHVNTnVpFr4nuL4VXNDltPh4Zk8Eh0si/LpmQY2D4PGwvCIlaYkBy4+zJavw2avH+XkmyARbWWaNvxBobxBw1U6kK/AykCgYEA9ddAkSVF6p+H1zuWUwwYeAHsq8QuPhTtrhmYeRkM3b7cCN+Q0dbZi6MuuYQCmneet2qtPpolPJFdQ4X2pbdqbTAOKtywOfsGkGVQXT42bXRfjaySGKoC67LvGVc0WxeBMnfFTEvU++MH7iAOZ+ziGT+GEBVtplgdYOgH2n7yWJ0CgYEA8848SvUqlob8JfeMfvc6nbn7dDfooZXfRNmD0szWPjtFPVPCEURdezQ6tAASPUHu6bn1jfmMa1shGll93kQZZ2y8m1H2NcFYE7L+1Y2jlxw6wbu8Xy//Bb7wqrxRcQwhaAedtx05h4l/o98oPNTo4k4F+/E4JRZNgrsw4Oq9VF8CgYAXwZY2sHBiLMpWrSZongmbRyxUqN+DFkilg0mtohMRNolSvi/jZyychsdUHAKYZKjMtp1JKGIiyTVG+iIMf33kUTl9QNgysiQ/PdsXN5TQ3OcC7MMtaPhhSGg8faXMi6frdZF2Pvm04Yp5o1VhC44JvI667ScsZOVp4OIpZg0LLQKBgQCofeMVOpIQLYGdC5PBO0L7NkkdbHYNFfKTNm/wAzgdEgEr/PKl1EV2nAXl2BbC1wox5R5a3Be7KeOavjZKoW2dGHzQKripNdGU66NKGvTvvcatlPz+G8F3SxowJK10HxoHNxw8LKpRjSj1K4g3Yj0ACUQBdheDKgKvUobZKeFmqQKBgBHsGi1/0P4hL/hgKzlSYrNSb/21JIO2+W5JAO7qcUtLyqZVY6YQnMLRGcEvEstb5ULubbsTRg9Ly55rRi3i5nsXGJFnXDHaOvRPjS4lZ5VYjnTlxkx8q1yEM+iQjQZfNiayXiBVfZ+Xtf26xXBSybO2DBQTPxgZiarPXTj2myCC",
        "saml_name_id_format": "email",
        "saml.onetimeuse.condition": "false",
        "saml_signature_canonicalization_method": "http://www.w3.org/2001/10/xml-exc-c14n#"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "name": "X500 email",
          "protocol": "saml",
          "protocolMapper": "saml-user-property-mapper",
          "consentRequired": false,
          "config": {
            "attribute.nameformat": "urn:oasis:names:tc:SAML:2.0:attrname-format:uri",
            "user.attribute": "email",
            "friendly.name": "email",
            "attribute.name": "urn:oid:1.2.840.113549.1.9.1"
          }
        },
        {
          "name": "docker-v2-allow-all-mapper",
          "protocol": "docker-v2",
          "protocolMapper": "docker-v2-allow-all-mapper",
          "consentRequired": false,
          "config": {}
        },
        {
          "name": "X500 givenName",
          "protocol": "saml",
          "protocolMapper": "saml-user-property-mapper",
          "consentRequired": false,
          "config": {
            "attribute.nameformat": "urn:oasis:names:tc:SAML:2.0:attrname-format:uri",
            "user.attribute": "firstName",
            "friendly.name": "givenName",
            "attribute.name": "urn:oid:2.5.4.42"
          }
        },
        {
          "name": "X500 surname",
          "protocol": "saml",
          "protocolMapper": "saml-user-property-mapper",
          "consentRequired": false,
          "config": {
            "attribute.nameformat": "urn:oasis:names:tc:SAML:2.0:attrname-format:uri",
            "user.attribute": "lastName",
            "friendly.name": "surname",
            "attribute.name": "urn:oid:2.5.4.4"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "clientId": "ttyd",
      "rootUrl": "https://ttyd.docker.local",
      "adminUrl": "https://ttyd.docker.local",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "fae836e6-e3aa-4436-b951-3c943b4c5811",
      "redirectUris": [
        "https://ttyd.docker.local/*"
      ],
      "webOrigins": [
        "https://ttyd.docker.local"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "name": "docker-v2-allow-all-mapper",
          "protocol": "docker-v2",
          "protocolMapper": "docker-v2-allow-all-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "roles",
        "profile",
        "ttyd",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    }
  ],
  "clientScopes": [
    {
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        },
        {
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        }
      ]
    },
    {
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        },
        {
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "name": "ttyd",
      "description": "ttyd",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "name": "ttyd",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "ttyd",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ]
    },
    {
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "String"
          }
        },
        {
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [
        {
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [
        {
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        },
        {
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "profile",
    "email",
    "roles",
    "web-origins",
    "ttyd"
  ],
  "keycloakVersion": "11.0.3"
}